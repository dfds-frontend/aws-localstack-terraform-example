version: "3.7"
services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack:0.12.11

    ports:
      - "4566-4599:4566-4599"
      - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    environment:
      - SERVICES=s3,lambda # list of services https://docs.aws.amazon.com/cli/latest/reference/#available-services or enable all of them by setting the value to ${SERVICES- }
      - DEFAULT_REGION=eu-central-1
      - DEBUG=1
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=8080
      # - LAMBDA_EXECUTOR=local
      # - LAMBDA_REMOTE_DOCKER=false
      - LAMBDA_EXECUTOR=docker-reuse
      - LAMBDA_REMOTE_DOCKER=${LAMBDA_REMOTE_DOCKER-true}
      - LAMBDA_REMOVE_CONTAINERS=true
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  -infrastructure:
    container_name: create-infrastructure
    image: alpine/terragrunt
    command: terragrunt apply-all --terragrunt-non-interactive -input=false -auto-approve -lock=false --terragrunt-source-update
    environment:
      #- TF_LOG=debug
      - TF_VAR_LOCAL_LAMBDA_CODE_PATH=${LOCAL_LAMBDA_CODE_PATH-}
    depends_on:
      - localstack
    volumes:
      - .:/project
    working_dir: /project
